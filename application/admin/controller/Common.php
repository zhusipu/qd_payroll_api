<?php
namespace app\admin\controller;

use Gamegos\JWT\Exception\JWTException;
use Gamegos\JWT\Validator;
use think\Config;
use think\Controller;
use think\Cookie;
use think\exception\HttpResponseException;
use think\Request;
use think\Response;

class Common extends Controller
{
    protected $token;
    protected $whiteList;
    protected $empNo = false;
    /*
     * 构造一哈
     */
    public function __construct(){
        parent::__construct();
    }

    /*
     * 初始一哈
     */
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->whiteList = ['/signin/index'];
        $request = Request::instance();
        $controller = $request->controller();
        $action = $request->action();
        if(in_array(strtolower('/'.$controller.'/'.$action), $this->whiteList)){
            return true;
        }
        //验证令牌
        $jwt = Cookie::get(Config::get('jwt.cookieName'),Config::get('cookie.prefix'));
        if($jwt){
            try{
                $validator = new Validator();
                $token = $validator->validate($jwt,Config::get('jwt.key'));
                $this->empNo = $token->getClaim('sub');
            } catch (JWTException $e){
                //令牌过期
                $this->result('',403,$e->getMessage(),'json');
            }
        }else{
            $this->result('',403,'','json');
        }
    }

    public function success($data = '', $msg = '', $wait = 3, $url = null, array $header = [])
    {
        if (is_null($url) && !is_null(Request::instance()->server('HTTP_REFERER'))) {
            $url = Request::instance()->server('HTTP_REFERER');
        } elseif ('' !== $url) {
            $url = (strpos($url, '://') || 0 === strpos($url, '/')) ? $url : Url::build($url);
        }
        $result = [
            'code' => 1,
            'msg'  => $msg,
            'data' => $data,
            'url'  => $url,
            'wait' => $wait,
        ];

        $response = Response::create($result, 'json')->header($header);
        throw new HttpResponseException($response);
    }

    public function error($msg = '', $data = '', $wait = 3, $url = null,  array $header = [])
    {
        if (is_null($url)) {
            $url = Request::instance()->isAjax() ? '' : '';
        } elseif ('' !== $url) {
            $url = (strpos($url, '://') || 0 === strpos($url, '/')) ? $url : Url::build($url);
        }
        $result = [
            'code' => 0,
            'msg'  => $msg,
            'data' => $data,
            'url'  => $url,
            'wait' => $wait,
        ];

        $response = Response::create($result, 'json')->header($header);
        throw new HttpResponseException($response);
    }


}
